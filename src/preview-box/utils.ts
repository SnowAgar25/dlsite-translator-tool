export interface PriceTableEntry {
    販売価格: number;
    卸価格: number;
}

const priceTable: PriceTableEntry[] = [
    { 販売価格: 110, 卸価格: 53 },
    { 販売価格: 220, 卸価格: 107 },
    { 販売価格: 330, 卸価格: 161 },
    { 販売価格: 440, 卸価格: 215 },
    { 販売価格: 550, 卸価格: 269 },
    { 販売価格: 660, 卸価格: 323 },
    { 販売価格: 770, 卸価格: 431 },
    { 販売価格: 880, 卸価格: 485 },
    { 販売価格: 990, 卸価格: 539 },
    { 販売価格: 1100, 卸価格: 647 },
    { 販売価格: 1210, 卸価格: 754 },
    { 販売価格: 1320, 卸価格: 862 },
    { 販売価格: 1430, 卸価格: 970 },
    { 販売価格: 1540, 卸価格: 1024 },
    { 販売価格: 1650, 卸価格: 1078 },
    { 販売価格: 1760, 卸価格: 1186 },
    { 販売価格: 1870, 卸価格: 1294 },
    { 販売価格: 1980, 卸価格: 1401 },
    { 販売価格: 2090, 卸価格: 1509 },
    { 販売価格: 2200, 卸価格: 1563 },
    { 販売価格: 2310, 卸価格: 1617 },
    { 販売価格: 2420, 卸価格: 1725 },
    { 販売価格: 2530, 卸価格: 1833 },
    { 販売価格: 2640, 卸価格: 1941 },
    { 販売価格: 2750, 卸価格: 2049 },
    { 販売価格: 2860, 卸価格: 2102 },
    { 販売価格: 2970, 卸価格: 2156 },
    { 販売価格: 3080, 卸価格: 2264 },
    { 販売価格: 3190, 卸価格: 2372 },
    { 販売価格: 3300, 卸価格: 2480 },
    { 販売価格: 3410, 卸価格: 2588 },
    { 販売価格: 3520, 卸価格: 2642 },
    { 販売価格: 3630, 卸価格: 2696 },
    { 販売価格: 3740, 卸価格: 2803 },
    { 販売価格: 3850, 卸価格: 2911 },
    { 販売価格: 3960, 卸価格: 3019 },
    { 販売価格: 4070, 卸価格: 3127 },
    { 販売価格: 4180, 卸価格: 3235 },
    { 販売価格: 4290, 卸価格: 3343 },
];

export function getWholesalePrice(販売価格: number): number {
    if (販売価格 >= 4400) {
        return Math.floor(販売価格 * 0.784);
    }
    const priceRow = priceTable.find(row => row.販売価格 === 販売価格);
    if (priceRow) {
        return priceRow.卸価格;
    } else {
        throw new Error('沒有相應價格，又不超過4400，出Bug了？')
    }
}